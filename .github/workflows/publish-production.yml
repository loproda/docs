name: Publish
on:
  push:
    branches:
      - production

jobs:
  publish:
    name: Production
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
      - run: npm ci
      - uses: actions/cache/restore@v4
        with:
          path: |
            node_modules/.astro/assets
          key: static
      - run: npm run build
        name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_OPTIONS: --max-old-space-size=4096
      - run: npx wrangler deploy
        name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      - name: Install rclone
        run: sudo -v ; curl https://rclone.org/install.sh | sudo bash
      - name: Build vendored Markdown
        run: npx tsx bin/generate-index-md.ts
      - name: Upload vendored Markdown archives to Vendored Markdown bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.VENDORED_DEVDOCS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.VENDORED_DEVDOCS_SECRET_ACCESS_KEY }}
        run: |
          cd distmd && zip -r markdown.zip .
          rclone copy \
            --config ../bin/rclone.conf \
            ./markdown.zip \
            devdocs:vendored-markdown
          rm markdown.zip
          cd ..

          cd distllms
          for file in $(find . -type f); do
            rclone copy \
              --config ../bin/rclone.conf \
              $file \
              devdocs:vendored-markdown
          done
          cd ..
      - name: Upload vendored Markdown files to ZT DevDocs bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ZT_DEVDOCS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ZT_DEVDOCS_SECRET_ACCESS_KEY }}
        run: |
          rclone sync \
            --config bin/rclone.conf \
            distmd \
            zt:zt-dashboard-dev-docs
      - name: Upload vendored Markdown files to AutoRAG DevDocs bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AUTORAG_DEVDOCS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AUTORAG_DEVDOCS_SECRET_ACCESS_KEY }}
        run: |
          rclone sync \
            --config bin/rclone.conf \
            distmd \
            autorag:developer-docs-full
      - uses: actions/cache/save@v4
        if: always()
        with:
          path: |
            node_modules/.astro/assets
          key: static
