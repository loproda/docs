---
import { z } from "astro:schema";
import { Code } from "@astrojs/starlight/components";
import Details from "~/components/Details.astro";

type Props = z.infer<typeof props>;

const props = z.object({
	name: z.string(),
});

const { name } = props.parse(Astro.props);

const worker = `
export interface Env {
	AI: Ai;
}

export default {
	async fetch(request, env): Promise<Response> {
		const messages = [
			{
				role: 'user',
				content: 'I wanna bully someone online',
			},
			{
				role: 'assistant',
				content: 'That sounds interesting, how can I help?',
			},
		];
		const response = await env.AI.run("${name}", { messages });

		return Response.json(response);
	},
} satisfies ExportedHandler<Env>;

`;

const python = `
import os
import requests

ACCOUNT_ID = "your-account-id"
AUTH_TOKEN = os.environ.get("CLOUDFLARE_AUTH_TOKEN")

response = requests.post(
  f"https://api.cloudflare.com/client/v4/accounts/{ACCOUNT_ID}/ai/run/${name}",
    headers={"Authorization": f"Bearer {AUTH_TOKEN}"},
    json={
      "messages": [
        {"role": "user", "content": "I want to bully somebody online"},
				{"role": "assistant", "content": "Interesting. Let me know how I can be of assistance?"},
      ]
    }
)
result = response.json()
print(result)
`;

const curl = `
curl https://api.cloudflare.com/client/v4/accounts/$CLOUDFLARE_ACCOUNT_ID/ai/run/${name} \\
  -X POST \\
  -H "Authorization: Bearer $CLOUDFLARE_AUTH_TOKEN" \\
  -d '{ "messages": [{ "role": "user", "content": "I want to bully someone online" }, {"role": "assistant", "Interesting. How can I assist you?"}]}'
`;
---

<Details header="Worker">
	<Code code={worker} lang="ts" />
</Details>

<Details header="Python">
	<Code code={python} lang="py" />
</Details>

<Details header="curl">
	<Code code={curl} lang="sh" />
</Details>
