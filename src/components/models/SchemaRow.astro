---
import { Type, MetaInfo } from "~/components";
import { type SchemaNode } from "@stoplight/json-schema-tree";

const { node } = Astro.props;
---

<li>
	<code title={node.title}>{node.subpath[node.subpath.length - 1]}</code>

	{node.primaryType && <Type text={node.primaryType} />}

	{node.combiners && node.combiners.includes("oneOf") && <Type text="one of" />}

	{
		node.parent.fragment?.required?.includes(
			node.subpath[node.subpath.length - 1],
		) && <MetaInfo text="required" />
	}

	{
		node.annotations.default && (
			<MetaInfo text={`default ${node.annotations.default}`} />
		)
	}
	{
		(node.validations.minLength !== undefined ||
			node.validations.minimum !== undefined) && (
			<MetaInfo
				text={`min ${node.validations.minLength || node.validations.minimum}`}
			/>
		)
	}
	{
		(node.validations.maxLength !== undefined ||
			node.validations.maximum !== undefined) && (
			<MetaInfo
				text={`max ${node.validations.maxLength || node.validations.maximum}`}
			/>
		)
	}
	<p>{node.annotations.description}</p>

	{
		node.children && (
			<ul class="pl-6">
				{node.children.map((node: SchemaNode) => (
					<Astro.self node={node} />
				))}
			</ul>
		)
	}
</li>
