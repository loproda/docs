---
import { z } from "astro:schema";
import { slug } from "github-slugger";

const props = z.object({
	usage: z.object({
		count: z.number(),
		pages: z.set(z.string()),
	}),
});

const { usage } = props.parse(Astro.props);
---

<>
	<p>
		Used <strong>{usage.count}</strong> times.
	</p>
	<p>
		<strong>Pages</strong>
	</p>
	<ul>
		{
			[...usage.pages]
				.filter((path) => path.startsWith("src/content/docs/"))
				.sort()
				.map((path) => {
					const slugified =
						"/" +
						path
							.replace("src/content/docs/", "")
							.replace("/index.mdx", "")
							.replace(".mdx", "")
							.split("/")
							.map((segment) => {
								if (segment === "1.1.1.1") {
									return segment;
								}
								return slug(segment);
							})
							.join("/") +
						"/";

					return (
						<li>
							<a href={slugified} target="_blank">
								{slugified}
							</a>
							<span>
								-
								<a
									href={
										"https://github.com/cloudflare/cloudflare-docs/blob/production/" +
										path
									}
									target="_blank"
								>
									Source
								</a>
							</span>
						</li>
					);
				})
		}
	</ul>
	<p>
		<strong>Partials</strong>
	</p>
	<ul>
		{
			[...usage.pages]
				.filter((path) => path.startsWith("src/content/partials/"))
				.sort()
				.map((path) => {
					return (
						<li>
							<a
								href={
									"https://github.com/cloudflare/cloudflare-docs/blob/production/" +
									path
								}
								target="_blank"
							>
								{path}
							</a>
						</li>
					);
				})
		}
	</ul>
</>
